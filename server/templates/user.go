// This file is generated by gorazor 2.0.1
// DON'T modified manually
// Should edit source file and re-generate: server/templates/user.gohtml

package templates

import (
	db "github.com/FlowingSPDG/get5-web-go/server/src/db"
	util "github.com/FlowingSPDG/get5-web-go/server/src/util"
	"github.com/FlowingSPDG/get5-web-go/server/templates/layout"
	"github.com/sipin/gorazor/gorazor"
	"io"
	"strings"
)

// User generates server/templates/user.gohtml
func User(u *db.UserPageData) string {
	var _b strings.Builder
	RenderUser(&_b, u)
	return _b.String()
}

// RenderUser render server/templates/user.gohtml
func RenderUser(_buffer io.StringWriter, u *db.UserPageData) {

	_body := func(_buffer io.StringWriter) {

	}

	_menu := func(_buffer io.StringWriter) {
		if u.LoggedIn == true {

			_buffer.WriteString("<li><a id=\"mymatches\" href=\"/mymatches\">My Matches</a></li>")

			_buffer.WriteString("<li><a id=\"match_create\" href=\"/match/create\">Create a Match</a></li>")

			_buffer.WriteString("<li><a id=\"myteams\" href=\"/myteams\">My Teams</a></li>")

			_buffer.WriteString("<li><a id=\"team_create\" href=\"/team/create\">Create a Team</a></li>")

			_buffer.WriteString("<li><a id=\"myservers\" href=\"/myservers\">My Servers</a></li>")

			_buffer.WriteString("<li><a id=\"server_create\" href=\"/server/create\">Add a Server</a></li>")

			_buffer.WriteString("<li><a href=\"/logout\">Logout</a></li>")

		} else {

			_buffer.WriteString("<li><a href=\"/login\"><img src=\"/static/img/login_small.png\" height=\"18\"/></a></li>")

		}
	}

	_content := func(_buffer io.StringWriter) {

		_buffer.WriteString("<div id=\"content\">\n\n  <div class=\"panel panel-default\">\n    <div class=\"panel-heading\">User information</div>\n    <div class=\"panel-body\">\n      ")

		matches := u.User.GetRecentMatches(10)
		teams := u.User.GetTeams(10)

		_buffer.WriteString("\n      Name: ")
		_buffer.WriteString(gorazor.HTMLEscStr(u.User.Name))
		_buffer.WriteString("<br>\n      Steam account: <a href=\"https://steamcommunity.com/profiles/")
		_buffer.WriteString(gorazor.HTMLEscStr(u.User.SteamID))
		_buffer.WriteString("\"> ")
		_buffer.WriteString(gorazor.HTMLEscStr(u.User.SteamID))
		_buffer.WriteString("</a> <br>\n      Teams saved: <a href=\"/teams/")
		_buffer.WriteString(gorazor.HTMLEscInt(u.User.ID))
		_buffer.WriteString("\"> ")
		_buffer.WriteString(gorazor.HTMLEscInt(len(teams)))
		_buffer.WriteString("</a> <br>\n      Matches created: <a href=\"/matches/")
		_buffer.WriteString(gorazor.HTMLEscInt(u.User.ID))
		_buffer.WriteString("\"> ")
		_buffer.WriteString(gorazor.HTMLEscInt(len(u.User.Matches)))
		_buffer.WriteString("</a> <br>\n    </div>\n  </div>\n\n  <div class=\"panel panel-default\">\n    <div class=\"panel-heading\">Recent Matches</div>\n    <div class=\"panel-body\">\n      ")
		for i := 0; i < len(matches); i++ {
			m := matches[i]
			vsstr, _ := m.GetVSString()

			_buffer.WriteString("<a href=\"/match/")
			_buffer.WriteString(gorazor.HTMLEscape(m.ID))
			_buffer.WriteString("\">#")
			_buffer.WriteString(gorazor.HTMLEscape(m.ID))
			_buffer.WriteString("</a>")
			_buffer.WriteString((":"))
			_buffer.WriteString((vsstr))

			_buffer.WriteString("<br>\n      ")
		}
		_buffer.WriteString("\n    </div>\n  </div>\n\n</div>")

	}

	_version := func(_buffer io.StringWriter) {
		version, err := util.GetVersion()
		if err != nil {
			version = "N/A"
		}

		_buffer.WriteString("<div class=\"panel-footer text-muted\">\n      <p>\n        Powered by <a href=\"http://steampowered.com\">Steam</a> -\n        <a href=\"/metrics\">Stats</a>\n         - Version <a href=\"https://github.com/FlowingSPDG/get5-web-go\">")
		_buffer.WriteString(gorazor.HTMLEscStr(version))
		_buffer.WriteString("+</a>\n      </p>\n    </div>")

	}

	layout.RenderBase(_buffer, _body, _menu, _content, _version)
}
